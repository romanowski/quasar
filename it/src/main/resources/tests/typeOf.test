{
    "name": "use type_of function",
    "backends": {
        "couchbase":         "pending",
        "mimir":             "pendingIgnoreFieldOrder",
        "mongodb_3_2":       "pending",
        "mongodb_3_4":       "pending",
        "mongodb_read_only": "pending"
    },
    "data": "nested_foo.data",
    "query": "select foo ?? \"nope\" as foo, type_of(foo ?? 42) as type from nested_foo",
    "NB": "The test suite doesn't handle empty objects well.",
    "predicate": "exactly",
    "ignoreResultOrder": true,
    "expected": [
      { "foo": "nope",                           "type": "integer" },
      { "foo": "nope",                           "type": "integer" },
      { "foo": "nope",                           "type": "integer" },
      { "foo": "zap",                            "type": "array"   },
      { "foo": [15, [{ "baz": ["quux"] }]],      "type": "array"   },
      { "foo": ["15z", [{ "baz": ["qx"] }]],     "type": "array"   },
      { "foo": [18, ["meh", { "baz": ["qx"] }]], "type": "array"   },
      { "foo": [16, [{ "baz": "mooooo" }]],      "type": "array"   },
      { "foo": { "bar": 15, "baz": ["qx"] },     "type": "map"     },
      { "foo": { "bar": "a15", "baz": ["qx"] },  "type": "map"     },
      { "foo": [17, [{ "baz": ["qx"] }]],        "type": "array"   }
    ]
}
